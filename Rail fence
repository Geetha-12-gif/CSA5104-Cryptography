#include <stdio.h>
#include <string.h>
void encryptRailFence(char *text, int key) {
    int len = strlen(text);
    char rail[key][len];
    for (int i=0; i<key; i++)
        for (int j=0; j<len; j++)
            rail[i][j] = '\n';
    int dir_down = 0;
    int row = 0, col = 0;
    for (int i=0; i<len; i++) {
        if (row == 0 || row == key-1)
            dir_down = !dir_down;

        rail[row][col++] = text[i];

        dir_down ? (row++) : (row--);
    }
    for (int i=0; i<key; i++)
        for (int j=0; j<len; j++)
            if (rail[i][j]!='\n')
                printf("%c", rail[i][j]);
}
void decryptRailFence(char *cipher, int key) {
    int len = strlen(cipher);
    char rail[key][len];
    for (int i=0; i<key; i++)
        for (int j=0; j<len; j++)
            rail[i][j] = '\n';
    int dir_down;
    int row = 0, col = 0;
    for (int i=0; i<len; i++) {
        if (row == 0)
            dir_down = 1;
        if (row == key-1)
            dir_down = 0;
        rail[row][col++] = '*';
        dir_down ? (row++) : (row--);
    }
    int index = 0;
    for (int i=0; i<key; i++)
        for (int j=0; j<len; j++)
            if (rail[i][j] == '*' && index<len)
                rail[i][j] = cipher[index++];
    row = 0, col = 0;
    for (int i=0; i<len; i++) {
        if (row == 0)
            dir_down = 1;
        if (row == key-1)
            dir_down = 0;
        printf("%c", rail[row][col++]);
        dir_down ? (row++) : (row--);
    }
}
int main()
 {
    char text[] = "HELLO_WORLD";
    int key = 3;
    printf("Plaintext: %s\n", text);
    printf("Encrypted: ");
    encryptRailFence(text, key);
    printf("\n");
}
